<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="org.apache.qpid.jms.JmsConnectionFactory"
        id="amqpDmzConnectionFactory" primary="true">
        <property name="remoteURI" value="${spring.activemq.broker-url}"/>
        <property name="username" value="${spring.activemq.user}"/>
        <property name="password" value="${spring.activemq.password}"/>
    </bean>
    <bean class="org.apache.camel.component.amqp.AMQPComponent" id="activemq">
        <property name="connectionFactory" ref="amqpDmzConnectionFactory"/>
    </bean>
    <bean class="ru.gazpromneft_at.components.RequestHandlerBean" id="corIdGenerator"></bean>
    <bean class="ru.gazpromneft_at.components.RequestProcessor" id="requestProcessor"></bean>
    <bean class="ru.gazpromneft_at.components.MessageReceiver" id="messageReceiver"></bean>
    <bean class="ru.gazpromneft_at.components.MessageIdReceiver" id="messageIdReceiver"></bean>
    <bean class="ru.gazpromneft_at.components.KspdLogicProcessor" id="kspdProcessor"></bean>

    <camelContext id="camel_context_mc_documentService_endpoint" xmlns="http://camel.apache.org/schema/spring">
        <restConfiguration apiContextPath="/api-doc" component="servlet"
            contextPath="/dmz" enableCORS="true" host="localhost"
            port="8080" scheme="http"/>
        <rest id="rest-example">
            <get id="getDMZData" uri="/getdmzData">
                <description>Get proxy data from KSPD</description>
                <responseMessage code="200" message="Ok"/>
                <responseMessage code="500" message="KSPD data not found"/>
                <to uri="direct:getData"/>
            </get>
            <get id="amq-example" uri="/getAsyncData">
                <responseMessage code="200" message="Ok"/>
                <responseMessage code="500" message="Queque ERROR!"/>
                <to uri="direct:addToQue"/>
            </get>
            <get id="hello-dmz" uri="/getHello">
                <responseMessage code="200" message="OK"></responseMessage>
                <to uri="direct:fuseHello"></to>
            </get>
        </rest>
        <!-- ########################################################################################## -->
        <!-- ########################################################################################## -->
        <!-- Тестовый прокси маршрут -->
        <!-- ########################################################################################## -->
        <route id="proxy-route">
            <from id="_from1" uri="direct:getData"/>
            <log id="route-proxy-log" message="Working as a proxy!"/>
            <to id="original-service" uri="http4://eap-app-integration-app.kspd-apps.demo.rht.ru/integration-service/serviceapi/getData?bridgeEndpoint=true"/>
        </route>

        <!--  IN  -->
        <route id="hello" >
            <from id="_from_rest_xml" uri="direct:hello"/>
            <setExchangePattern pattern="InOut"></setExchangePattern>
            <log id="hello0log" message="Hello world start!"/>
            <process ref="requestProcessor"></process>
            <inOnly id="_to_que_in" uri="activemq:queue:que_in?useMessageIDAsCorrelationID=false?acknowledgementModeName=AUTO_ACKNOWLEDGE"/>
        </route>


        <!-- ***   THIS IS FOR KSPD PROCESSOR  *** -->
        <route id="kspd-request">
            <from id="from_dmz" uri="activemq:queue:que_in"></from>
            <setExchangePattern pattern="InOnly"></setExchangePattern>
            <log id="from_que1" message="FROM QUE"></log>
            <process ref="kspdProcessor"></process>
            <setHeader headerName="HELLO">
                <constant>WORLD</constant>
            </setHeader>
            <log message="MOVE FROM IN TO OUT"></log>
            <to  uri="activemq:queue:que_out"></to>
        </route>



        <!--   OUT   RESULT   -->

        <route id="result">
            <from uri="direct:result"></from>
            <setExchangePattern pattern="InOut"></setExchangePattern>
            <process ref="messageReceiver"></process>
            <log message="DATA RECIEVED!"></log>
            <setHeader headerName="RESULT">
                <constant>EST RESULT</constant>
            </setHeader>
        </route>


        <!--   OUT   RESULT  BY ID  -->

        <route id="resultId">
            <from uri="direct:resultId"></from>
            <setExchangePattern pattern="InOut"></setExchangePattern>
            <process ref="messageIdReceiver"></process>
            <log message="DATA RECIEVED!"></log>
            <setHeader headerName="RESULT">
                <constant>EST RESULT</constant>
            </setHeader>
        </route>




        <route id="send_toQue_in_route">
            <from id="_from_amq-example" uri="direct:addToQue"/>
            <log id="add_to_que_log" message="add message to que"/>
            <setBody>
                <constant>ADDED TO QUE_IN</constant>
            </setBody>
            <to id="_to1" uri="activemq:queue:que_in?acknowledgementModeName=CLIENT_ACKNOWLEDGE"/>
        </route>
        <route id="route-hello-dmz">
            <from id="from-hello-dmz" uri="direct:fuseHello"></from>
            <setBody>
                <constant>BODY BUILDER</constant>
            </setBody>
            <log id="helloDMZ" message="HELLO DMZ!"></log>
        </route>


    </camelContext>
</beans>
